{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "ApiBus Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/blockchain/allowance": {
            "get": {
                "description": "Get MOR allowance for spender",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Allowance for MOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spender address",
                        "name": "spender",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Approve MOR allowance for spender",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Approve MOR allowance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Spender address",
                        "name": "spender",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/balance": {
            "get": {
                "description": "Get ETH and MOR balance of the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get ETH and MOR balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/models": {
            "get": {
                "description": "Get models list from blokchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get models list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/blockchain/models/{id}/bids": {
            "get": {
                "description": "Get bids from blockchain by model agent",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Bids by\tModel Agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ModelAgent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/blockchain/providers": {
            "get": {
                "description": "Get providers list from blokchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get providers list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/blockchain/providers/{id}/bids": {
            "get": {
                "description": "Get bids from blockchain by provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Bids by Provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/blockchain/send/eth": {
            "post": {
                "description": "Send Eth to address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Send Eth",
                "parameters": [
                    {
                        "description": "Send Eth",
                        "name": "sendeth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpcproxy.SendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/send/mor": {
            "post": {
                "description": "Send Mor to address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Send Mor",
                "parameters": [
                    {
                        "description": "Send Mor",
                        "name": "sendmor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpcproxy.SendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/sessions": {
            "get": {
                "description": "Get sessions from blockchain by user or provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get Sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider address",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User address",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Sends transaction in blockchain to open a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Open Session with Provider in blockchain",
                "parameters": [
                    {
                        "description": "Open session",
                        "name": "opensession",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpcproxy.OpenSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/sessions/budget": {
            "get": {
                "description": "Get todays budget from blockchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Todays Budget",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/sessions/v2": {
            "post": {
                "description": "Full flow to open a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Open Session full flow",
                "parameters": [
                    {
                        "description": "Open session",
                        "name": "opensessionv2",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apibus.OpenSessionRequestV2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/sessions/{id}/close": {
            "post": {
                "description": "Sends transaction in blockchain to close a session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Close Session with Provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/token/supply": {
            "get": {
                "description": "Get MOR token supply from blockchain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Token Supply",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/blockchain/transactions": {
            "get": {
                "description": "Get MOR and ETH transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/config": {
            "get": {
                "description": "Return the current config of proxy router",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Get Config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proxyapi.ConfigResponse"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "do ping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Healthcheck example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proxyapi.HealthCheckResponse"
                        }
                    }
                }
            }
        },
        "/proxy/sessions/${id}/providerClaim": {
            "post": {
                "description": "Claim provider balance from session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Claim Provider Balance",
                "parameters": [
                    {
                        "description": "Claim",
                        "name": "claim",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpcproxy.SendRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/proxy/sessions/${id}/providerClaimableBalance": {
            "get": {
                "description": "Get provider claimable balance from session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get Provider Claimable Balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/proxy/sessions/initiate": {
            "post": {
                "description": "sends a handshake to the provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Initiate Session with Provider",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/chat/completions": {
            "post": {
                "description": "Send prompt to a local or remote model based on session id in header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Send Local Or Remote Prompt",
                "parameters": [
                    {
                        "description": "Prompt",
                        "name": "prompt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proxyapi.PromptRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/wallet": {
            "get": {
                "description": "Get wallet address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get Wallet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Set wallet private key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Set Wallet",
                "parameters": [
                    {
                        "description": "Private key",
                        "name": "privatekey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httphandlers.SetupWalletReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apibus.OpenSessionRequestV2": {
            "type": "object",
            "properties": {
                "bidId": {
                    "type": "string"
                },
                "providerUrl": {
                    "type": "string"
                },
                "sessionDuration": {
                    "type": "integer"
                }
            }
        },
        "httphandlers.SetupWalletReqBody": {
            "type": "object",
            "required": [
                "privateKey"
            ],
            "properties": {
                "privateKey": {
                    "type": "string"
                }
            }
        },
        "proxyapi.ConfigResponse": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "string"
                },
                "config": {},
                "derivedConfig": {},
                "version": {
                    "type": "string"
                }
            }
        },
        "proxyapi.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "proxyapi.PromptMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "proxyapi.PromptRequest": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proxyapi.PromptMessage"
                    }
                },
                "model": {
                    "type": "string"
                },
                "stream": {
                    "type": "boolean"
                }
            }
        },
        "rpcproxy.OpenSessionRequest": {
            "type": "object",
            "properties": {
                "approval": {
                    "type": "string"
                },
                "approvalSig": {
                    "type": "string"
                },
                "stake": {
                    "type": "string"
                }
            }
        },
        "rpcproxy.SendRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}